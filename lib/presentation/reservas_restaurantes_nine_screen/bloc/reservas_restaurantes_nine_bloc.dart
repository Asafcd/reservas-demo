import 'package:equatable/equatable.dart';import 'package:flutter/material.dart';import '/core/app_export.dart';import '../models/userslider_item_model.dart';import '../models/widgetchipview_item_model.dart';import 'package:asaf_s_application2/presentation/reservas_restaurantes_nine_screen/models/reservas_restaurantes_nine_model.dart';part 'reservas_restaurantes_nine_event.dart';part 'reservas_restaurantes_nine_state.dart';/// A bloc that manages the state of a ReservasRestaurantesNine according to the event that is dispatched to it.
class ReservasRestaurantesNineBloc extends Bloc<ReservasRestaurantesNineEvent, ReservasRestaurantesNineState> {ReservasRestaurantesNineBloc(ReservasRestaurantesNineState initialState) : super(initialState) { on<ReservasRestaurantesNineInitialEvent>(_onInitialize); on<ChangeDropDownEvent>(_changeDropDown); on<UpdateChipViewEvent>(_updateChipView); }

_changeDropDown(ChangeDropDownEvent event, Emitter<ReservasRestaurantesNineState> emit, ) { emit(state.copyWith(selectedDropDownValue: event.value)); } 
_updateChipView(UpdateChipViewEvent event, Emitter<ReservasRestaurantesNineState> emit, ) { List<WidgetchipviewItemModel> newList = List<WidgetchipviewItemModel>.from(state.reservasRestaurantesNineModelObj!.widgetchipviewItemList); newList[event.index] = newList[event.index].copyWith(isSelected: event.isSelected); emit(state.copyWith(reservasRestaurantesNineModelObj: state.reservasRestaurantesNineModelObj?.copyWith(widgetchipviewItemList: newList))); } 
List<UsersliderItemModel> fillUsersliderItemList() { return List.generate(2, (index) => UsersliderItemModel()); } 
List<SelectionPopupModel> fillDropdownItemList() { return [SelectionPopupModel(id: 1, title: "Item One", isSelected: true), SelectionPopupModel(id: 2, title: "Item Two"), SelectionPopupModel(id: 3, title: "Item Three")]; } 
List<WidgetchipviewItemModel> fillWidgetchipviewItemList() { return List.generate(5, (index) => WidgetchipviewItemModel()); } 
_onInitialize(ReservasRestaurantesNineInitialEvent event, Emitter<ReservasRestaurantesNineState> emit, ) async  { emit(state.copyWith(sliderIndex: 0)); emit(state.copyWith(reservasRestaurantesNineModelObj: state.reservasRestaurantesNineModelObj?.copyWith(usersliderItemList: fillUsersliderItemList(), dropdownItemList: fillDropdownItemList(), widgetchipviewItemList: fillWidgetchipviewItemList()))); } 
 }
