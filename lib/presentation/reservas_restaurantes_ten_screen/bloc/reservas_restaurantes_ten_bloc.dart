import 'package:equatable/equatable.dart';import 'package:flutter/material.dart';import '/core/app_export.dart';import '../models/userslider1_item_model.dart';import '../models/widgetchipview2_item_model.dart';import 'package:asaf_s_application2/presentation/reservas_restaurantes_ten_screen/models/reservas_restaurantes_ten_model.dart';part 'reservas_restaurantes_ten_event.dart';part 'reservas_restaurantes_ten_state.dart';/// A bloc that manages the state of a ReservasRestaurantesTen according to the event that is dispatched to it.
class ReservasRestaurantesTenBloc extends Bloc<ReservasRestaurantesTenEvent, ReservasRestaurantesTenState> {ReservasRestaurantesTenBloc(ReservasRestaurantesTenState initialState) : super(initialState) { on<ReservasRestaurantesTenInitialEvent>(_onInitialize); on<ChangeDropDownEvent>(_changeDropDown); on<UpdateChipViewEvent>(_updateChipView); }

_changeDropDown(ChangeDropDownEvent event, Emitter<ReservasRestaurantesTenState> emit, ) { emit(state.copyWith(selectedDropDownValue: event.value)); } 
_updateChipView(UpdateChipViewEvent event, Emitter<ReservasRestaurantesTenState> emit, ) { List<Widgetchipview2ItemModel> newList = List<Widgetchipview2ItemModel>.from(state.reservasRestaurantesTenModelObj!.widgetchipview2ItemList); newList[event.index] = newList[event.index].copyWith(isSelected: event.isSelected); emit(state.copyWith(reservasRestaurantesTenModelObj: state.reservasRestaurantesTenModelObj?.copyWith(widgetchipview2ItemList: newList))); } 
List<Userslider1ItemModel> fillUserslider1ItemList() { return List.generate(2, (index) => Userslider1ItemModel()); } 
List<SelectionPopupModel> fillDropdownItemList() { return [SelectionPopupModel(id: 1, title: "Item One", isSelected: true), SelectionPopupModel(id: 2, title: "Item Two"), SelectionPopupModel(id: 3, title: "Item Three")]; } 
List<Widgetchipview2ItemModel> fillWidgetchipview2ItemList() { return List.generate(5, (index) => Widgetchipview2ItemModel()); } 
_onInitialize(ReservasRestaurantesTenInitialEvent event, Emitter<ReservasRestaurantesTenState> emit, ) async  { emit(state.copyWith(sliderIndex: 0)); emit(state.copyWith(reservasRestaurantesTenModelObj: state.reservasRestaurantesTenModelObj?.copyWith(userslider1ItemList: fillUserslider1ItemList(), dropdownItemList: fillDropdownItemList(), widgetchipview2ItemList: fillWidgetchipview2ItemList()))); } 
 }
